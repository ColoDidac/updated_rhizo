{"ast":null,"code":"import { forkJoin, of } from 'rxjs';\nimport { catchError, debounceTime, distinctUntilChanged, map, switchMap, tap } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthenticationBasicService } from '../../login-basic/authentication-basic.service';\nimport { DatasetService } from '../../dataset/dataset.service';\nimport { ClassService } from '../class.service';\nimport { FacetService } from '../../facet/facet.service';\nimport { Class } from '../class';\nimport * as d3 from 'd3';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Labelled } from '../../shared/labelled';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../login-basic/authentication-basic.service\";\nimport * as i3 from \"@ngx-translate/core\";\nimport * as i4 from \"../../dataset/dataset.service\";\nimport * as i5 from \"../class.service\";\nimport * as i6 from \"../../facet/facet.service\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@ng-bootstrap/ng-bootstrap\";\n\nconst _c0 = function (a1) {\n  return [\"/datasets\", a1, \"details\"];\n};\n\nfunction NetworkComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵelementStart(1, \"button\", 25);\n    i0.ɵɵelement(2, \"span\", 26);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(4, _c0, ctx_r0.datasetId));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 2, \"overview.details\"), \"\");\n  }\n}\n\nfunction NetworkComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"overview.sorry\"));\n  }\n}\n\nfunction NetworkComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 28);\n  }\n}\n\nfunction NetworkComponent_small_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"overview.three-ch\"), \"\");\n  }\n}\n\nfunction NetworkComponent_small_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"overview.no-classes\"), \"\");\n  }\n}\n\nfunction NetworkComponent_ng_template_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngb-highlight\", 30);\n  }\n\n  if (rf & 2) {\n    const r_r15 = ctx.result;\n    const t_r16 = ctx.term;\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"result\", r_r15.getLabel(ctx_r8.translate.currentLang))(\"term\", t_r16);\n  }\n}\n\nfunction NetworkComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵelement(1, \"div\", 32);\n    i0.ɵɵelementStart(2, \"div\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 1, \"overview.analyzing\"));\n  }\n}\n\nfunction NetworkComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 0);\n    i0.ɵɵelementStart(1, \"div\", 33);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 1, \"overview.no-class-instances\"));\n  }\n}\n\nfunction NetworkComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(0, \"div\", 34);\n    i0.ɵɵelementStart(1, \"div\", 35);\n    i0.ɵɵlistener(\"click\", function NetworkComponent_div_26_Template_div_click_1_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return ctx_r17.contract();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"div\", 36);\n    i0.ɵɵlistener(\"click\", function NetworkComponent_div_26_Template_div_click_2_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.expand();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NetworkComponent_span_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"top \", ctx_r12.topClasses, \" classes and \");\n  }\n}\n\nfunction NetworkComponent_span_32_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementStart(3, \"a\", 37);\n    i0.ɵɵlistener(\"click\", function NetworkComponent_span_32_Template_a_click_3_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return ctx_r20.setFacetRelevance(0);\n    });\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \")\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind1(2, 3, \"overview.relations\"), \" > \", ctx_r13.facetRelevance * 100, \"% (\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 5, \"overview.show-all\"));\n  }\n}\n\nfunction NetworkComponent_span_33_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementStart(3, \"a\", 37);\n    i0.ɵɵlistener(\"click\", function NetworkComponent_span_33_Template_a_click_3_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return ctx_r22.setFacetRelevance(0.3);\n    });\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \")\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(2, 2, \"overview.all-rel\"), \" (\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 4, \"overview.show-less\"));\n  }\n}\n\nexport let NetworkComponent = /*#__PURE__*/(() => {\n  class NetworkComponent {\n    constructor(router, route, authService, translate, datasetService, classService, facetService) {\n      this.router = router;\n      this.route = route;\n      this.authService = authService;\n      this.translate = translate;\n      this.datasetService = datasetService;\n      this.classService = classService;\n      this.facetService = facetService;\n      this.searching = false;\n      this.searchFailed = false;\n      this.topClasses = 30;\n      this.facetRelevance = 0.3;\n      this.colors = d3.scaleOrdinal(d3.schemeCategory10);\n      this.emptyAutocomplete = false;\n\n      this.drag = simulation => {\n        function dragstarted(event) {\n          if (!event.active) {\n            simulation.alphaTarget(0.3).restart();\n          }\n\n          event.subject.fx = event.subject.x;\n          event.subject.fy = event.subject.y;\n        }\n\n        function dragged(event) {\n          event.subject.fx = event.x;\n          event.subject.fy = event.y;\n        }\n\n        function dragended(event) {\n          if (!event.active) {\n            simulation.alphaTarget(0);\n          }\n\n          event.subject.fx = null;\n          event.subject.fy = null;\n        }\n\n        return d3.drag().on('start', dragstarted).on('drag', dragged).on('end', dragended);\n      };\n\n      this.autocomplete = text$ => text$.pipe(tap(() => this.emptyAutocomplete = false), debounceTime(500), distinctUntilChanged(), tap(() => this.searching = true), switchMap(term => term.length < 3 ? of([]) : this.classService.getTopClassesContaining(this.datasetId, 10, term, this.translate.currentLang).pipe(tap(() => this.searchFailed = false), map(response => response.map(cls => new Class(cls))), catchError(() => {\n        this.searchFailed = true;\n        return of([]);\n      }))), tap(results => {\n        this.searching = false;\n        this.emptyAutocomplete = results.length < 1;\n      }));\n    }\n\n    ngOnInit() {\n      this.datasetId = this.route.snapshot.paramMap.get('did') || 'default';\n      this.svg = d3.select('svg');\n      this.width = this.svg.node().getBoundingClientRect().width;\n      this.height = window.innerHeight - this.svg.node().getBoundingClientRect().top - 60;\n      this.loadClassList();\n    }\n\n    loadClassList() {\n      this.classService.getTopClasses(this.datasetId, this.topClasses).subscribe({\n        next: classes => {\n          this.classes = classes;\n          this.nodes = this.classes.map(cls => new Node({\n            id: cls.curie,\n            curie: cls.curie,\n            labels: cls.labels,\n            uri: cls.uri,\n            count: cls.instanceCount\n          }));\n          forkJoin(classes.map(cls => this.facetService.getRelevantRelations(this.datasetId, cls.curie, this.facetRelevance, this.translate.currentLang)).map(o => o.pipe(catchError(() => of([]))))).subscribe(classesFacets => {\n            this.relations = classesFacets.reduce((acc, val) => acc.concat(val), []);\n            this.links = this.relations.map(relation => ({\n              id: relation.classCurie + '/' + relation.propertyCurie + '/' + relation.rangeCurie,\n              label: relation.propertyLabel,\n              source: relation.classCurie,\n              target: relation.rangeCurie,\n              count: relation.uses\n            }));\n            this.links = this.links.filter(link => this.nodes.find(node => node.id === link.target) && this.nodes.find(node => node.id === link.source) && link.source !== link.target);\n            this.nodes = this.nodes.filter(node => this.links.find(link => node.id === link.target) || this.links.find(link => node.id === link.source));\n            const repetitions = this.links.reduce((acc, link) => {\n              const id = link.source + '/' + link.target;\n              acc[id] = acc[id] || [];\n              acc[id].push({\n                id: link.id,\n                count: acc[id].length + 1\n              });\n              return acc;\n            }, Object.create(null));\n            Object.keys(repetitions).filter(key => repetitions[key].length > 1).forEach(key => {\n              repetitions[key].forEach(repetition => {\n                const repeatedLink = this.links.find(link => link.id === repetition.id);\n\n                if (repeatedLink && repetition.count > 1) {\n                  repeatedLink['repetition'] = repetition.count;\n                }\n              });\n            });\n            this.setup();\n          });\n        },\n        error: () => this.router.navigate(['/about'])\n      });\n    }\n\n    setup() {\n      this.svg.selectAll('*').remove();\n      const vmin = Math.min(this.width, this.height);\n      this.force = vmin;\n      this.svg = this.svg.attr('viewBox', [-this.width / 2, -this.height / 2, this.width, this.height]);\n      this.maxCount = Math.max(...this.nodes.map(c => c.count), 0);\n      this.minCount = Math.min(...this.nodes.map(c => c.count), this.maxCount);\n      this.maxNodeSize = vmin / 30 + 5;\n      this.minNodeSize = vmin / 90 + 5;\n      this.simulation = d3.forceSimulation(this.nodes).force('link', d3.forceLink(this.links).id(d => d['id']).distance(d => d['label'].length * 10)).force('charge', d3.forceManyBody().strength(-this.force)).force('x', d3.forceX()).force('y', d3.forceY());\n      this.svg.append('defs').append('marker').attr('id', 'arrow-marker').attr('viewBox', '0 -5 10 10').attr('refX', 0).attr('refY', 0).attr('markerWidth', 5).attr('markerHeight', 5).attr('orient', 'auto').append('path').attr('d', 'M0,-5L10,0L0,5');\n      this.link = this.svg.append('g').selectAll('g.link').data(this.links).enter().append('g').attr('class', 'link');\n      this.linkPath = this.link.append('path').attr('class', 'link-path').attr('marker-end', 'url(#arrow-marker)');\n      this.textPath = this.link.append('path').attr('id', d => d.id).attr('class', 'text-path');\n      this.svg.append('g').selectAll('.link-label').data(this.links).enter().append('text').attr('class', 'link-label').append('textPath').attr('startOffset', '50%').attr('text-anchor', 'middle').attr('xlink:href', d => '#' + d.id).text(d => d.label).clone(true).lower().attr('class', 'link-label-outline');\n      this.node = this.svg.append('g').selectAll('g').data(this.nodes).join('g').on('click', this.browse.bind(this)).call(this.drag(this.simulation));\n      this.node.append('title').text(d => d.uri);\n      this.node.append('text').text(d => d.getLabel(this.translate.currentLang)).attr('class', 'node-label').clone(true).lower().attr('class', 'node-label-outline');\n      this.node.append('circle').lower().attr('fill', d => this.colors(d.id.split(':')[0])).attr('r', d => this.nodeSize(d.count));\n      this.simulation.on('tick', () => this.ticked());\n    }\n\n    ticked() {\n      this.linkPath.attr('d', d => this.arcPath(false, d));\n      this.linkPath.attr('d', (d, i, n) => this.adjustMarker(true, d, n[i]));\n      this.textPath.attr('d', d => this.arcPath(d.source.x < d.target.x, d));\n      this.node.attr('transform', d => `translate(${d.x}, ${d.y})`);\n    }\n\n    nodeSize(n) {\n      return (n - this.minCount) / (this.maxCount - this.minCount) * this.maxNodeSize + this.minNodeSize;\n    }\n\n    arcPath(leftHand, d) {\n      const start = leftHand ? d.source : d.target,\n            end = leftHand ? d.target : d.source,\n            dx = end.x - start.x,\n            dy = end.y - start.y,\n            repetition = d.repetition ? 1 / 2 + 1 / (d.repetition * d.repetition) : 1,\n            dr = Math.sqrt(dx * dx + dy * dy) * repetition,\n            sweep = leftHand ? 0 : 1;\n      return 'M' + start.x + ',' + start.y + 'A' + dr + ',' + dr + ' 0 0,' + sweep + ' ' + end.x + ',' + end.y;\n    }\n\n    adjustMarker(isSweep, d, node) {\n      const r = this.nodeSize(d.target.count) + 7,\n            // \"size\" of the marker Math.sqrt(5**2 + 5**2)\n      m = node.getPointAtLength(r);\n      const start = isSweep ? d.source : d.target,\n            dx = m.x - start.x,\n            dy = m.y - start.y,\n            repetition = d.repetition ? 1 / 2 + 1 / (d.repetition * d.repetition) : 1,\n            dr = Math.sqrt(dx * dx + dy * dy) * repetition,\n            sweep = isSweep ? 0 : 1;\n      return 'M' + start.x + ',' + start.y + 'A' + dr + ',' + dr + ' 0 0,' + sweep + ' ' + m.x + ',' + m.y;\n    }\n\n    browse(event) {\n      const curie = event.currentTarget ? event.currentTarget.__data__.id : event.curie;\n\n      if (this.datasetId === 'default') {\n        this.router.navigate(['/overview', curie]);\n      } else {\n        this.router.navigate(['/datasets', this.datasetId, curie]);\n      }\n    }\n\n    search(text) {\n      if (this.datasetId === 'default') {\n        this.router.navigate(['/overview/search'], {\n          queryParams: {\n            'text': text\n          }\n        });\n      } else {\n        this.router.navigate(['/datasets', this.datasetId, 'search'], {\n          queryParams: {\n            'text': text\n          }\n        });\n      }\n    }\n\n    isLoggedIn() {\n      return this.authService.isLoggedIn();\n    }\n\n    expand() {\n      this.force = this.force * 1.5;\n      this.simulation.force('charge', d3.forceManyBody().strength(-this.force));\n      this.simulation.alpha(1).restart();\n    }\n\n    contract() {\n      this.force = this.force * 0.5;\n      this.simulation.force('charge', d3.forceManyBody().strength(-this.force));\n      this.simulation.alpha(1).restart();\n    }\n\n    setFacetRelevance(relevance) {\n      this.facetRelevance = relevance;\n      this.loadClassList();\n    }\n\n    ngOnDestroy() {\n      this.simulation.stop();\n    }\n\n  }\n\n  NetworkComponent.ɵfac = function NetworkComponent_Factory(t) {\n    return new (t || NetworkComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.AuthenticationBasicService), i0.ɵɵdirectiveInject(i3.TranslateService), i0.ɵɵdirectiveInject(i4.DatasetService), i0.ɵɵdirectiveInject(i5.ClassService), i0.ɵɵdirectiveInject(i6.FacetService));\n  };\n\n  NetworkComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NetworkComponent,\n    selectors: [[\"app-network\"]],\n    decls: 34,\n    vars: 26,\n    consts: [[1, \"row\"], [\"class\", \"col-lg-2 form-group pull-left\", 4, \"ngIf\"], [1, \"col-md\", \"form-group\", \"input-group\"], [\"id\", \"search\", \"type\", \"text\", 1, \"form-control\", 3, \"placeholder\", \"keyup.enter\"], [\"text\", \"\"], [1, \"input-group-append\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-secondary\", 3, \"click\"], [1, \"fa\", \"fa-search\"], [1, \"col-md-3\", \"form-group\"], [\"id\", \"typeahead\", \"type\", \"text\", 1, \"form-control\", 3, \"resultTemplate\", \"ngbTypeahead\", \"placeholder\", \"selectItem\"], [\"typeahead\", \"\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [1, \"row\", 2, \"margin-top\", \"-20px\"], [\"class\", \"col-sm-3 pull-left\", 4, \"ngIf\"], [1, \"col-sm\"], [1, \"col-sm-3\"], [\"class\", \"form-text text-muted\", 4, \"ngIf\"], [\"rt\", \"\"], [\"id\", \"loading\", \"style\", \"text-align: center;\", 4, \"ngIf\"], [\"class\", \"row\", 4, \"ngIf\"], [2, \"width\", \"100%\", \"height\", \"auto\", \"margin-top\", \"-58px\"], [\"style\", \"margin-top: -50px\", 4, \"ngIf\"], [1, \"col\", \"small\", \"alert-warning\", \"m-3\", \"text-center\"], [4, \"ngIf\"], [1, \"col-lg-2\", \"form-group\", \"pull-left\"], [\"id\", \"detailsBtn\", \"type\", \"button\", 1, \"btn\", \"btn-outline-primary\", 3, \"routerLink\"], [1, \"fa\", \"fa-info-circle\"], [1, \"invalid-feedback\"], [1, \"col-sm-3\", \"pull-left\"], [1, \"form-text\", \"text-muted\"], [3, \"result\", \"term\"], [\"id\", \"loading\", 2, \"text-align\", \"center\"], [\"id\", \"spinner\"], [1, \"col\", \"alert-danger\", \"m-3\", \"text-center\"], [2, \"margin-top\", \"-50px\"], [1, \"fa\", \"fa-minus-square\", \"mr-1\", 3, \"click\"], [1, \"fa\", \"fa-plus-square\", 3, \"click\"], [2, \"cursor\", \"pointer\", \"text-decoration\", \"underline\", 3, \"click\"]],\n    template: function NetworkComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r24 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, NetworkComponent_div_1_Template, 5, 6, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"input\", 3, 4);\n        i0.ɵɵlistener(\"keyup.enter\", function NetworkComponent_Template_input_keyup_enter_3_listener() {\n          i0.ɵɵrestoreView(_r24);\n\n          const _r1 = i0.ɵɵreference(4);\n\n          return ctx.search(_r1.value);\n        });\n        i0.ɵɵpipe(5, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 5);\n        i0.ɵɵelementStart(7, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function NetworkComponent_Template_button_click_7_listener() {\n          i0.ɵɵrestoreView(_r24);\n\n          const _r1 = i0.ɵɵreference(4);\n\n          return ctx.search(_r1.value);\n        });\n        i0.ɵɵelement(8, \"span\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 8);\n        i0.ɵɵelementStart(10, \"input\", 9, 10);\n        i0.ɵɵlistener(\"selectItem\", function NetworkComponent_Template_input_selectItem_10_listener($event) {\n          return ctx.browse($event.item);\n        });\n        i0.ɵɵpipe(12, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(13, NetworkComponent_div_13_Template, 3, 3, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 12);\n        i0.ɵɵtemplate(15, NetworkComponent_div_15_Template, 1, 0, \"div\", 13);\n        i0.ɵɵelementStart(16, \"div\", 14);\n        i0.ɵɵtext(17, \"\\u00A0\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 15);\n        i0.ɵɵtemplate(19, NetworkComponent_small_19_Template, 3, 3, \"small\", 16);\n        i0.ɵɵtemplate(20, NetworkComponent_small_20_Template, 3, 3, \"small\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(21, NetworkComponent_ng_template_21_Template, 1, 2, \"ng-template\", null, 17, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(23, NetworkComponent_div_23_Template, 5, 3, \"div\", 18);\n        i0.ɵɵtemplate(24, NetworkComponent_div_24_Template, 4, 3, \"div\", 19);\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelement(25, \"svg\", 20);\n        i0.ɵɵtemplate(26, NetworkComponent_div_26_Template, 3, 0, \"div\", 21);\n        i0.ɵɵnamespaceHTML();\n        i0.ɵɵelementStart(27, \"div\", 0);\n        i0.ɵɵelementStart(28, \"div\", 22);\n        i0.ɵɵtext(29);\n        i0.ɵɵpipe(30, \"translate\");\n        i0.ɵɵtemplate(31, NetworkComponent_span_31_Template, 2, 1, \"span\", 23);\n        i0.ɵɵtemplate(32, NetworkComponent_span_32_Template, 7, 7, \"span\", 23);\n        i0.ɵɵtemplate(33, NetworkComponent_span_33_Template, 7, 6, \"span\", 23);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r2 = i0.ɵɵreference(11);\n\n        const _r7 = i0.ɵɵreference(22);\n\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoggedIn());\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(5, 20, \"overview.searchAll\"));\n        i0.ɵɵadvance(7);\n        i0.ɵɵclassProp(\"is-invalid\", ctx.searchFailed)(\"loading\", ctx.searching);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(12, 22, \"overview.searchClasses\"));\n        i0.ɵɵproperty(\"resultTemplate\", _r7)(\"ngbTypeahead\", ctx.autocomplete);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.searchFailed);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoggedIn());\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", _r2.value.length > 0 && _r2.value.length < 3);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", _r2.value.length > 2 && ctx.emptyAutocomplete && !ctx.searching);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.links === undefined);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.classes == null ? null : ctx.classes.length) === 0);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.links !== undefined);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(30, 24, \"overview.showing\"), \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", (ctx.classes == null ? null : ctx.classes.length) === ctx.topClasses);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.facetRelevance > 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.facetRelevance === 0);\n      }\n    },\n    directives: [i7.NgIf, i1.RouterLink, i8.NgbTypeahead, i8.NgbHighlight],\n    pipes: [i3.TranslatePipe],\n    styles: [\"path{fill:none;stroke:gray;stroke-width:1}marker path{fill:gray}.link-label{text-anchor:middle;font:1.2vmin sans-serif;fill:gray}.link-label-outline{font:1.2vmin sans-serif;fill:none;stroke:#fff;stroke-width:2}.text-path{stroke:none}circle{stroke:#fff;stroke-width:2;cursor:pointer}.node-label{font:1.6vmin sans-serif;font-weight:700;text-transform:none;cursor:pointer}.node-label-outline{font:1.6vmin sans-serif;font-weight:700;text-transform:none;fill:none;stroke:#fff;stroke-width:2}\\n\"],\n    encapsulation: 2\n  });\n  return NetworkComponent;\n})();\n\nclass Node extends Labelled {\n  constructor(values = {}) {\n    super(values);\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}