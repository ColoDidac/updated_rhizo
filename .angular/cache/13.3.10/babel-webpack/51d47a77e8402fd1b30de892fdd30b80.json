{"ast":null,"code":"import { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { UserService } from '../user.service';\nimport { AdminService } from '../admin.service';\nimport { User } from '../../login-basic/user';\nimport { AuthenticationBasicService } from '../../login-basic/authentication-basic.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../user.service\";\nimport * as i3 from \"../admin.service\";\nimport * as i4 from \"../../login-basic/authentication-basic.service\";\nimport * as i5 from \"@angular/forms\";\n\nconst _c0 = function () {\n  return [\"..\"];\n};\n\nexport let UserEditComponent = /*#__PURE__*/(() => {\n  class UserEditComponent {\n    constructor(route, router, userService, adminService, authService) {\n      this.route = route;\n      this.router = router;\n      this.userService = userService;\n      this.adminService = adminService;\n      this.authService = authService;\n      this.user = new User();\n      this.isEditing = true;\n    }\n\n    ngOnInit() {\n      const id = this.route.snapshot.paramMap.get('id');\n      this.userService.get(id).subscribe(linguist => this.user = linguist);\n    }\n\n    onSubmit() {\n      if (this.user.authorities.length > 0 && this.user.authorities[0].authority.indexOf('ADMIN') > 0) {\n        this.user.authorities = [];\n        this.adminService.update(this.user).subscribe(user => this.logoutIfChangedOwnPassword(user));\n      } else {\n        this.user.authorities = [];\n        this.userService.update(this.user).subscribe(user => this.logoutIfChangedOwnPassword(user));\n      }\n    }\n\n    logoutIfChangedOwnPassword(user) {\n      if (this.authService.getCurrentUser().username === user.username) {\n        this.authService.logout();\n        this.router.navigate(['/about']);\n      } else {\n        this.router.navigate(['/users', user.id]);\n      }\n    }\n\n  }\n\n  UserEditComponent.ɵfac = function UserEditComponent_Factory(t) {\n    return new (t || UserEditComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.AdminService), i0.ɵɵdirectiveInject(i4.AuthenticationBasicService));\n  };\n\n  UserEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UserEditComponent,\n    selectors: [[\"app-linguist-edit\"]],\n    decls: 22,\n    vars: 10,\n    consts: [[\"id\", \"user-form\", 3, \"ngSubmit\"], [\"form\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"username\", 1, \"control-label\"], [\"id\", \"username\", \"name\", \"username\", \"type\", \"text\", \"required\", \"\", 1, \"form-control\", 3, \"readOnly\", \"ngModel\", \"ngModelChange\"], [\"username\", \"ngModel\"], [1, \"invalid-feedback\"], [\"for\", \"password\", 1, \"control-label\"], [\"id\", \"password\", \"name\", \"password\", \"type\", \"password\", \"required\", \"\", \"minlength\", \"8\", \"maxlength\", \"256\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"password\", \"ngModel\"], [\"id\", \"submit\", \"type\", \"submit\", 1, \"btn\", \"m-1\", \"btn-success\", \"pull-right\", 3, \"disabled\"], [\"id\", \"listBtn\", \"type\", \"button\", 1, \"btn\", \"m-1\", \"btn-outline-primary\", \"pull-right\", 3, \"routerLink\"]],\n    template: function UserEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0, 1);\n        i0.ɵɵlistener(\"ngSubmit\", function UserEditComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(2, \"fieldset\");\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵelementStart(4, \"label\", 3);\n        i0.ɵɵtext(5, \"Username*\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"input\", 4, 5);\n        i0.ɵɵlistener(\"ngModelChange\", function UserEditComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.user.username = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 6);\n        i0.ɵɵtext(9, \"A username is required\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 2);\n        i0.ɵɵelementStart(11, \"label\", 7);\n        i0.ɵɵtext(12, \"Password*\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"input\", 8, 9);\n        i0.ɵɵlistener(\"ngModelChange\", function UserEditComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.user.password = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 6);\n        i0.ɵɵtext(16, \"A password longer than 8 characters is required\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 2);\n        i0.ɵɵelementStart(18, \"button\", 10);\n        i0.ɵɵtext(19, \"Submit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"button\", 11);\n        i0.ɵɵtext(21, \"Back\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(1);\n\n        const _r1 = i0.ɵɵreference(7);\n\n        const _r2 = i0.ɵɵreference(14);\n\n        i0.ɵɵadvance(3);\n        i0.ɵɵclassProp(\"was-validated\", _r1.dirty || _r1.touched);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"readOnly\", ctx.isEditing)(\"ngModel\", ctx.user.username);\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassProp(\"was-validated\", _r2.dirty || _r2.touched);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.password);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"disabled\", !_r0.form.valid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(9, _c0));\n      }\n    },\n    directives: [i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.NgForm, i5.DefaultValueAccessor, i5.RequiredValidator, i5.NgControlStatus, i5.NgModel, i5.MinLengthValidator, i5.MaxLengthValidator, i1.RouterLink],\n    encapsulation: 2\n  });\n  return UserEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}