{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { Rest4Service } from '../shared/rest4.service';\nimport { environment } from '../../environments/environment';\nimport { Filter } from '../breadcrumb/filter';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let RangeService = /*#__PURE__*/(() => {\n  class RangeService extends Rest4Service {\n    constructor(http) {\n      super('datasets', 'classes', 'facets', 'ranges', http);\n      this.http = http;\n    }\n\n    getValues(did, cid, fid, rid, filters) {\n      let params = Filter.toQuery(filters);\n      return this.http.get(`${environment.API}/datasets/${did}/classes/${cid}/facets/${fid}/ranges/${rid}/values`, {\n        params: params\n      });\n    }\n\n    getValue(did, cid, fid, rid, value, filters) {\n      let params = Filter.toQuery(filters);\n      params = params.append('value', value);\n      return this.http.get(`${environment.API}/datasets/${did}/classes/${cid}/facets/${fid}/ranges/${rid}`, {\n        params: params\n      });\n    }\n\n    getValuesContaining(did, cid, fid, rid, filters, top, containing, lang) {\n      let params = Filter.toQuery(filters);\n      params = params.append('top', top.toString());\n      params = params.append('containing', containing);\n      params = params.append('lang', lang);\n      return this.http.get(`${environment.API}/datasets/${did}/classes/${cid}/facets/${fid}/ranges/${rid}/valuesContaining`, {\n        params: params\n      });\n    }\n\n    getMinMax(did, cid, fid, rid, filters) {\n      let params = Filter.toQuery(filters);\n      return this.http.get(`${environment.API}/datasets/${did}/classes/${cid}/facets/${fid}/ranges/${rid}/minmax`, {\n        params: params\n      });\n    }\n\n  }\n\n  RangeService.ɵfac = function RangeService_Factory(t) {\n    return new (t || RangeService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  RangeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RangeService,\n    factory: RangeService.ɵfac,\n    providedIn: 'root'\n  });\n  return RangeService;\n})();","map":null,"metadata":{},"sourceType":"module"}