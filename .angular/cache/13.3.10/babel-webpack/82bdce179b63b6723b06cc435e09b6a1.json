{"ast":null,"code":"import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let RestService = /*#__PURE__*/(() => {\n  class RestService {\n    constructor(resource, httpClient) {\n      this.httpClient = httpClient;\n      this.resource = resource;\n    }\n\n    getHttpOptions() {\n      return {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n    }\n\n    getAll() {\n      return this.httpClient.get(`${environment.API}/${this.resource}`);\n    }\n\n    get(id) {\n      return this.httpClient.get(`${environment.API}/${this.resource}/${id}`);\n    }\n\n    create(entity) {\n      const body = JSON.stringify(entity);\n      return this.httpClient.post(`${environment.API}/${this.resource}`, body, this.getHttpOptions());\n    }\n\n    update(entity) {\n      const body = JSON.stringify(entity);\n      return this.httpClient.put(`${environment.API}/${this.resource}/${entity['id']}`, body, this.getHttpOptions());\n    }\n\n    patch(entity) {\n      const body = JSON.stringify(entity);\n      return this.httpClient.patch(`${environment.API}/${this.resource}/${entity['id']}`, body, this.getHttpOptions());\n    }\n\n    delete(entity) {\n      return this.httpClient.delete(`${environment.API}/${this.resource}/${entity['id']}`);\n    }\n\n  }\n\n  RestService.ɵfac = function RestService_Factory(t) {\n    i0.ɵɵinvalidFactory();\n  };\n\n  RestService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RestService,\n    factory: RestService.ɵfac\n  });\n  return RestService;\n})();","map":null,"metadata":{},"sourceType":"module"}