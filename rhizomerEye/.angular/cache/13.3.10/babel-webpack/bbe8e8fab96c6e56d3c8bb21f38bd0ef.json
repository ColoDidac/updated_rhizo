{"ast":null,"code":"import { of, Subject } from 'rxjs';\nimport { BreadcrumbService } from '../../breadcrumb/breadcrumb.service';\nimport { RangeService } from '../range.service';\nimport { Facet } from '../../facet/facet';\nimport { Range } from '../range';\nimport { RangeValue } from '../rangeValue';\nimport { Filter, Operator } from '../../breadcrumb/filter';\nimport { catchError, debounceTime, distinctUntilChanged, map, switchMap, takeUntil, tap } from 'rxjs/operators';\nimport { TranslateService } from '@ngx-translate/core';\nimport { PointerType } from '@angular-slider/ngx-slider';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../breadcrumb/breadcrumb.service\";\nimport * as i2 from \"@ngx-translate/core\";\nimport * as i3 from \"../range.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular-slider/ngx-slider\";\nimport * as i7 from \"@ng-bootstrap/ng-bootstrap\";\n\nfunction DetailRangeComponent_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.range.timesUsed);\n  }\n}\n\nfunction DetailRangeComponent_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵlistener(\"click\", function DetailRangeComponent_span_5_Template_span_click_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.firstValues();\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction DetailRangeComponent_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 14);\n    i0.ɵɵlistener(\"click\", function DetailRangeComponent_span_6_Template_span_click_0_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.clearValues(ctx_r12.range);\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction DetailRangeComponent_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 15);\n  }\n}\n\nfunction DetailRangeComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵelementStart(1, \"label\", 17);\n    i0.ɵɵelementStart(2, \"input\", 18);\n    i0.ɵɵlistener(\"change\", function DetailRangeComponent_div_8_Template_input_change_2_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.switchOperator();\n    })(\"ngModelChange\", function DetailRangeComponent_div_8_Template_input_ngModelChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.isOperatorOr = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 19);\n    i0.ɵɵelementStart(4, \"div\", 20);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate2(\"id\", \"switch-\", ctx_r4.facet.curie, \"-\", ctx_r4.range.curie, \"\");\n    i0.ɵɵproperty(\"ngModel\", ctx_r4.isOperatorOr);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r4.operatorLabel());\n  }\n}\n\nfunction DetailRangeComponent_p_9_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"search.exclude\"), \" \");\n  }\n}\n\nfunction DetailRangeComponent_p_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p\", 21);\n    i0.ɵɵlistener(\"click\", function DetailRangeComponent_p_9_Template_p_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r21);\n      const value_r17 = restoredCtx.$implicit;\n      const ctx_r20 = i0.ɵɵnextContext();\n      return ctx_r20.filterValue(value_r17);\n    });\n    i0.ɵɵelementStart(1, \"span\", 2);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 22);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, DetailRangeComponent_p_9_span_5_Template, 3, 3, \"span\", 23);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const value_r17 = ctx.$implicit;\n    const lastValue_r18 = ctx.last;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"border-bottom\", !lastValue_r18)(\"bg-warning\", value_r17.selected)(\"bg-danger\", value_r17.negated)(\"text-white\", value_r17.negated);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"title\", ctx_r5.valueToolTip(value_r17));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(value_r17 == null ? null : value_r17.getLabel(ctx_r5.translate.currentLang));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(value_r17.count);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", value_r17.selected && !ctx_r5.isOperatorOr);\n  }\n}\n\nfunction DetailRangeComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵelementStart(1, \"ngx-slider\", 26);\n    i0.ɵɵlistener(\"userChangeEnd\", function DetailRangeComponent_div_10_Template_ngx_slider_userChangeEnd_1_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return ctx_r22.changeRange($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"options\", ctx_r6.sliderOptions())(\"value\", 0)(\"highValue\", ctx_r6.range.max);\n  }\n}\n\nfunction DetailRangeComponent_div_11_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1, \"Sorry, suggestions could not be loaded.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction DetailRangeComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"input\", 27, 28);\n    i0.ɵɵlistener(\"selectItem\", function DetailRangeComponent_div_11_Template_input_selectItem_1_listener($event) {\n      i0.ɵɵrestoreView(_r27);\n\n      const _r24 = i0.ɵɵreference(2);\n\n      const ctx_r26 = i0.ɵɵnextContext();\n      return ctx_r26.selectItem($event, _r24);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, DetailRangeComponent_div_11_div_3_Template, 2, 0, \"div\", 29);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n\n    const _r8 = i0.ɵɵreference(13);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"is-invalid\", ctx_r7.searchFailed)(\"loading\", ctx_r7.searching);\n    i0.ɵɵproperty(\"resultTemplate\", _r8)(\"editable\", false)(\"ngbTypeahead\", ctx_r7.search);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.searchFailed);\n  }\n}\n\nfunction DetailRangeComponent_ng_template_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngb-highlight\", 31);\n  }\n\n  if (rf & 2) {\n    const r_r28 = ctx.result;\n    const t_r29 = ctx.term;\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"result\", r_r28.getLabel(ctx_r9.translate.currentLang))(\"term\", t_r29);\n  }\n}\n\nvar RangeStatus = /*#__PURE__*/(() => {\n  (function (RangeStatus) {\n    RangeStatus[RangeStatus[\"UNEXPANDED\"] = 0] = \"UNEXPANDED\";\n    RangeStatus[RangeStatus[\"LOADING\"] = 1] = \"LOADING\";\n    RangeStatus[RangeStatus[\"EXPANDED\"] = 2] = \"EXPANDED\";\n  })(RangeStatus || (RangeStatus = {}));\n\n  return RangeStatus;\n})();\nexport let DetailRangeComponent = /*#__PURE__*/(() => {\n  class DetailRangeComponent {\n    constructor(breadcrumbService, translate, rangeService) {\n      this.breadcrumbService = breadcrumbService;\n      this.translate = translate;\n      this.rangeService = rangeService;\n      this.range = new Range();\n      this.facet = new Facet();\n      this.ngUnsubscribe = new Subject();\n      this.status = RangeStatus.UNEXPANDED;\n      this.rangeStatus = RangeStatus;\n      this.searching = false;\n      this.searchFailed = false;\n      this.isOperatorOr = false;\n      this.SLIDER_DATATYPES = ['xsd:int', 'xsd:integer', 'xsd:gYear', 'xsd:decimal', 'xsd:float', 'xsd:double'];\n      this.STEP1_DATATYPES = ['xsd:int', 'xsd:integer', 'xsd:gYear'];\n\n      this.search = text$ => text$.pipe(debounceTime(500), distinctUntilChanged(), tap(() => this.searching = true), switchMap(term => term.length < 3 ? of([]) : this.rangeService.getValuesContaining(this.datasetId, this.classId, this.facet.curie, this.range.curie, this.isOperatorOr ? [] : this.breadcrumbService.filters, 10, term, this.translate.currentLang).pipe(map(values => values.map(value => new RangeValue(value, this.facet, this.breadcrumbService.filters))), tap(() => this.searchFailed = false), catchError(() => {\n        this.searchFailed = true;\n        return of([]);\n      }))), tap(() => this.searching = false));\n    }\n\n    ngOnInit() {\n      if (this.range.expanded) {\n        this.firstValues();\n      }\n    }\n\n    firstValues() {\n      if (this.isSliderDatatype()) {\n        this.subscription = this.breadcrumbService.filtersSelection.pipe(takeUntil(this.ngUnsubscribe)).subscribe(filters => {\n          this.status = RangeStatus.LOADING;\n          this.rangeService.getMinMax(this.datasetId, this.classId, this.facet.curie, this.range.curie, filters).subscribe(range => {\n            this.range.min = range.min;\n            this.range.max = range.max;\n            this.status = RangeStatus.EXPANDED;\n          });\n        });\n      } else {\n        this.subscription = this.breadcrumbService.filtersSelection.pipe(takeUntil(this.ngUnsubscribe)).subscribe(filters => {\n          this.status = RangeStatus.LOADING;\n          this.filter = this.breadcrumbService.getFacetFilter(this.classId, this.facet, this.range);\n          this.isOperatorOr = this.filter && this.filter.operator == Operator.OR;\n          this.rangeService.getValues(this.datasetId, this.classId, this.facet.curie, this.range.curie, filters).pipe(map(response => response.map(value => new RangeValue(value, this.facet, filters)))).subscribe(rangeValues => {\n            var _a;\n\n            this.range.values = rangeValues;\n            (_a = this.filter) === null || _a === void 0 ? void 0 : _a.values.filter(filterValue => !this.range.values.find(value => value.value === filterValue.value)).forEach(filterValue => this.rangeService.getValue(this.datasetId, this.classId, this.facet.curie, this.range.curie, filterValue.value, filters).subscribe(value => this.range.values.push(new RangeValue(value, this.facet, filters))));\n            this.status = RangeStatus.EXPANDED;\n          });\n        });\n      }\n    }\n\n    clearValues(range) {\n      this.subscription.unsubscribe();\n      range.values = range.min = range.max = undefined;\n      this.status = RangeStatus.UNEXPANDED;\n    }\n\n    filterValue(value) {\n      var _a, _b;\n\n      let operator = Operator.NONE;\n\n      if (((_b = (_a = this.filter) === null || _a === void 0 ? void 0 : _a.values) === null || _b === void 0 ? void 0 : _b.length) > 0) {\n        operator = this.isOperatorOr ? Operator.OR : Operator.AND;\n      }\n\n      if (!value.selected && !value.negated) {\n        value.selected = true;\n        value.negated = false;\n        this.breadcrumbService.addFacetFilterValue(this.classId, this.facet, this.range, value, operator);\n      } else if (value.selected && !value.negated && !this.isOperatorOr) {\n        value.selected = false;\n        value.negated = true;\n        this.breadcrumbService.negateFacetFilterValue(this.classId, this.facet, this.range, value, operator);\n      } else {\n        value.selected = false;\n        value.negated = false;\n        this.breadcrumbService.removeFacetFilterValue(this.classId, this.facet, this.range, value);\n      }\n    }\n\n    valueToolTip(value) {\n      let text = value.value;\n\n      if (text.startsWith('\"') && text.endsWith('\"')) {\n        text = text.slice(1, text.length - 1);\n      }\n\n      return text;\n    }\n\n    selectItem($event, autocomplete) {\n      $event.preventDefault();\n      this.filterValue($event.item);\n      autocomplete.value = '';\n    }\n\n    changeRange(changeContext) {\n      let filter = this.breadcrumbService.popFacetFilter(this.classId, this.facet, this.range);\n\n      if (!filter) {\n        filter = new Filter(this.classId, this.facet, this.range, Operator.NONE, []);\n      }\n\n      if (changeContext.pointerType == PointerType.Min) {\n        filter.values = filter.values.filter(value => !value.value.startsWith('\"≧'));\n        filter.values.push(new RangeValue({\n          value: '≧' + changeContext.value\n        }, this.facet, []));\n      } else if (changeContext.pointerType == PointerType.Max) {\n        filter.values = filter.values.filter(value => !value.value.startsWith('\"≦'));\n        filter.values.push(new RangeValue({\n          value: '≦' + changeContext.highValue\n        }, this.facet, []));\n      }\n\n      if (filter.values.length > 1) {\n        filter.operator = Operator.AND;\n      }\n\n      this.breadcrumbService.addFacetFilter(filter);\n    }\n\n    sliderOptions() {\n      const floor = this.range.min;\n      const ceil = this.range.max;\n      const noSwitching = true;\n      const step = this.STEP1_DATATYPES.includes(this.range.curie) ? 1 : (ceil - floor) / 100;\n      return {\n        floor,\n        ceil,\n        noSwitching,\n        step\n      };\n    }\n\n    isSliderDatatype() {\n      return this.SLIDER_DATATYPES.includes(this.range.curie);\n    }\n\n    switchOperator() {\n      let filter = this.breadcrumbService.popFacetFilter(this.classId, this.facet, this.range);\n\n      if (filter) {\n        filter.operator = Operator.NONE;\n\n        if (filter.values && filter.values.length > 0) {\n          filter.operator = this.isOperatorOr ? Operator.OR : Operator.AND;\n        }\n\n        if (filter.operator == Operator.OR) {\n          // TODO: negation not supported with operator OR, switch all negated to selected\n          filter.values = filter.values.map(value => {\n            value.negated = false;\n            return value;\n          });\n        }\n\n        this.breadcrumbService.addFacetFilter(filter);\n      }\n    }\n\n    operatorLabel() {\n      if (this.isOperatorOr) {\n        return this.translate.instant('search.Or');\n      } else {\n        return this.translate.instant('search.And');\n      }\n    }\n\n  }\n\n  DetailRangeComponent.ɵfac = function DetailRangeComponent_Factory(t) {\n    return new (t || DetailRangeComponent)(i0.ɵɵdirectiveInject(i1.BreadcrumbService), i0.ɵɵdirectiveInject(i2.TranslateService), i0.ɵɵdirectiveInject(i3.RangeService));\n  };\n\n  DetailRangeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DetailRangeComponent,\n    selectors: [[\"app-detail-range\"]],\n    inputs: {\n      range: \"range\",\n      facet: \"facet\",\n      datasetId: \"datasetId\",\n      classId: \"classId\",\n      ngUnsubscribe: \"ngUnsubscribe\"\n    },\n    decls: 14,\n    vars: 10,\n    consts: [[1, \"card\", \"range\", \"p-2\", \"mb-1\"], [1, \"card-title\", \"p-1\", \"m-0\"], [3, \"title\"], [\"class\", \"badge badge-light badge-pill\", 4, \"ngIf\"], [\"class\", \"fa fa-plus-circle ml-1\", \"style\", \"cursor: pointer\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"fa fa-minus-circle ml-1\", \"style\", \"cursor: pointer\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"fa fa-circle-o-notch fa-spin ml-1\", 4, \"ngIf\"], [\"class\", \"pull-right\", 4, \"ngIf\"], [\"class\", \"card-text value small pl-3 m-0 text-truncate\", \"style\", \"cursor: pointer\", 3, \"border-bottom\", \"bg-warning\", \"bg-danger\", \"text-white\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"range-slider\", 4, \"ngIf\"], [4, \"ngIf\"], [\"rt\", \"\"], [1, \"badge\", \"badge-light\", \"badge-pill\"], [1, \"fa\", \"fa-plus-circle\", \"ml-1\", 2, \"cursor\", \"pointer\", 3, \"click\"], [1, \"fa\", \"fa-minus-circle\", \"ml-1\", 2, \"cursor\", \"pointer\", 3, \"click\"], [1, \"fa\", \"fa-circle-o-notch\", \"fa-spin\", \"ml-1\"], [1, \"pull-right\"], [1, \"switch\"], [\"type\", \"checkbox\", 3, \"id\", \"ngModel\", \"change\", \"ngModelChange\"], [1, \"slider\", \"round\"], [1, \"slider-text\", \"text-center\"], [1, \"card-text\", \"value\", \"small\", \"pl-3\", \"m-0\", \"text-truncate\", 2, \"cursor\", \"pointer\", 3, \"click\"], [1, \"badge\", \"badge-secondary\", \"float-right\", \"m-1\"], [\"class\", \"badge badge-danger small float-right m-1\", 4, \"ngIf\"], [1, \"badge\", \"badge-danger\", \"small\", \"float-right\", \"m-1\"], [1, \"range-slider\"], [3, \"options\", \"value\", \"highValue\", \"userChangeEnd\"], [\"id\", \"typeahead-http\", \"type\", \"text\", \"placeholder\", \"Search facet values\", 1, \"pl-3\", \"form-control\", \"form-control-sm\", 3, \"resultTemplate\", \"editable\", \"ngbTypeahead\", \"selectItem\"], [\"autocomplete\", \"\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [1, \"invalid-feedback\"], [1, \"small\", 3, \"result\", \"term\"]],\n    template: function DetailRangeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"b\", 2);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, DetailRangeComponent_span_4_Template, 2, 1, \"span\", 3);\n        i0.ɵɵtemplate(5, DetailRangeComponent_span_5_Template, 1, 0, \"span\", 4);\n        i0.ɵɵtemplate(6, DetailRangeComponent_span_6_Template, 1, 0, \"span\", 5);\n        i0.ɵɵtemplate(7, DetailRangeComponent_span_7_Template, 1, 0, \"span\", 6);\n        i0.ɵɵtemplate(8, DetailRangeComponent_div_8_Template, 6, 4, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(9, DetailRangeComponent_p_9_Template, 6, 12, \"p\", 8);\n        i0.ɵɵtemplate(10, DetailRangeComponent_div_10_Template, 2, 3, \"div\", 9);\n        i0.ɵɵtemplate(11, DetailRangeComponent_div_11_Template, 4, 8, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(12, DetailRangeComponent_ng_template_12_Template, 1, 2, \"ng-template\", null, 11, i0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"title\", ctx.range.uri);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.range.getLabel(ctx.translate.currentLang));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.facet.ranges.length > 1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.status === ctx.rangeStatus.UNEXPANDED && !ctx.range.allBlank);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.status === ctx.rangeStatus.EXPANDED);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.status === ctx.rangeStatus.LOADING);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.status === ctx.rangeStatus.EXPANDED && !ctx.isSliderDatatype());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.range.values);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.status === ctx.rangeStatus.EXPANDED && ctx.range.min && ctx.range.max);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.range.values);\n      }\n    },\n    directives: [i4.NgIf, i5.CheckboxControlValueAccessor, i5.NgControlStatus, i5.NgModel, i4.NgForOf, i6.ɵa, i7.NgbTypeahead, i7.NgbHighlight],\n    pipes: [i2.TranslatePipe],\n    styles: [\".range-slider .ngx-slider .ngx-slider-selection{background:#007bff}  .range-slider .ngx-slider .ngx-slider-pointer{width:16px;height:16px;top:-6px;background-color:#ffc107}  .range-slider .ngx-slider .ngx-slider-pointer:after{top:4px;left:4px;background-color:#007bff}  .range-slider .ngx-slider .ngx-slider-bubble{cursor:default;bottom:12px;padding:0 0 0 6px;color:#212529;font-size:small}.switch[_ngcontent-%COMP%]{position:relative;display:inline-block;width:56px;height:20px;margin-top:2px}.switch[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{display:none}.slider[_ngcontent-%COMP%]{position:absolute;cursor:pointer;top:0;left:0;right:0;bottom:0;background-color:#ffc107;transition:.4s;border-radius:20px;font-size:x-small;font-weight:700}.slider[_ngcontent-%COMP%]:before{position:absolute;content:\\\"\\\";height:12px;width:12px;left:4px;bottom:4px;background-color:#fff;transition:.4s;border-radius:50%}input[_ngcontent-%COMP%]:checked + .slider[_ngcontent-%COMP%]{background-color:#ffc107}input[_ngcontent-%COMP%]:focus + .slider[_ngcontent-%COMP%]{box-shadow:0 0 1px #ffc107}input[_ngcontent-%COMP%]:checked + .slider[_ngcontent-%COMP%]:before{transform:translate(36px)}.slider[_ngcontent-%COMP%]:after{color:#000;display:block;position:absolute;transform:translate(-50%,-50%);top:50%;left:50%}.slider-text[_ngcontent-%COMP%]{margin-top:3px}\"]\n  });\n  return DetailRangeComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}