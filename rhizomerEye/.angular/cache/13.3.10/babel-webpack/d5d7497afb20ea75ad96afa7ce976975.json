{"ast":null,"code":"import { HttpHandler, HttpRequest } from '@angular/common/http';\nimport { AuthenticationBasicService } from './authentication-basic.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./authentication-basic.service\";\nexport let AuthInterceptor = /*#__PURE__*/(() => {\n  class AuthInterceptor {\n    constructor(authentication) {\n      this.authentication = authentication;\n    }\n\n    intercept(req, next) {\n      if (this.authentication.isLoggedIn()) {\n        const authToken = this.authentication.getCurrentUser().authorization;\n        const authReq = req.clone({\n          headers: req.headers.set('Authorization', authToken)\n        });\n        return next.handle(authReq);\n      } else {\n        return next.handle(req);\n      }\n    }\n\n  }\n\n  AuthInterceptor.ɵfac = function AuthInterceptor_Factory(t) {\n    return new (t || AuthInterceptor)(i0.ɵɵinject(i1.AuthenticationBasicService));\n  };\n\n  AuthInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptor,\n    factory: AuthInterceptor.ɵfac\n  });\n  return AuthInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}