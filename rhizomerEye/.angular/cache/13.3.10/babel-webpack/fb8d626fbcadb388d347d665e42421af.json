{"ast":null,"code":"import { Labelled } from '../shared/labelled';\nexport class RangeValue extends Labelled {\n  constructor(values = {}, facet, filters) {\n    var _a, _b;\n\n    super(values);\n    this.selected = false;\n    this.negated = false;\n\n    if (this.uri) {\n      this.value = '<' + this.uri + '>';\n    } else if (this.value.indexOf('^^') > 0) {\n      this.value = '\\\"' + this.value.split('^^')[0] + '\\\"^^<' + this.value.split('^^')[1] + '>';\n    } else {\n      this.value = '\\\"' + this.value + '\\\"';\n    }\n\n    const filter = filters.find(f => f.facet.id === facet.id && f.range.uri === facet.range);\n    this.selected = ((_a = filter === null || filter === void 0 ? void 0 : filter.values.find(value => value.value === this.value)) === null || _a === void 0 ? void 0 : _a.selected) || false;\n    this.negated = ((_b = filter === null || filter === void 0 ? void 0 : filter.values.find(value => value.value === this.value)) === null || _b === void 0 ? void 0 : _b.negated) || false;\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}