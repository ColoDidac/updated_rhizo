{"ast":null,"code":"export class UriUtils {\n  static localName(uri) {\n    if (uri.endsWith('/')) {\n      uri = uri.substring(0, uri.length - 1);\n    }\n\n    if (uri.indexOf('#') > 0) {\n      return uri.substring(uri.lastIndexOf('#') + 1);\n    } else if (uri.indexOf('/') > 0) {\n      return uri.substring(uri.lastIndexOf('/') + 1);\n    } else {\n      return uri;\n    }\n  }\n\n  static getLabel(uri, labels, prefLang) {\n    if (labels.has(uri)) {\n      const label = this.pickLabel(labels.get(uri), prefLang);\n\n      if (label && label.length) {\n        return label;\n      }\n    }\n\n    return UriUtils.localName(uri);\n  }\n\n  static pickLabel(value, prefLang) {\n    if (value instanceof Array) {\n      const preferred = value.filter(label => label['@language'] && label['@language'].indexOf(prefLang) === 0).map(label => label['@value'] || label)[0];\n      const noLang = value.filter(label => !label['@language']).map(label => label['@value'] || label)[0];\n      const defaultLang = value.map(label => label['@value'] || label)[0];\n      return preferred || noLang || defaultLang;\n    } else if (value['@value']) {\n      return value['@value'];\n    } else {\n      return value;\n    }\n  }\n\n  static expandUri(input, context) {\n    if (this.isUrl(input) || input.startsWith('urn:')) {\n      return input;\n    } else if (!input.startsWith('_:') && input.match(/\\S+:\\S+/)) {\n      const ns = input.split(':')[0];\n\n      if (context[ns]) {\n        const base = context[ns]['@id'] ? context[ns]['@id'] : context[ns];\n        return base + input.split(':').slice(1);\n      }\n    } else if (context[input]) {\n      return context[input]['@id'];\n    }\n\n    return input;\n  }\n\n  static isUrl(str) {\n    const pattern = new RegExp('^(?:(?:https?|ftp|file|mailto|tel):)' + '(?:\\\\([-A-Z0-9+&@#\\\\/%=~_|$?!:,.]*\\\\)|' + '[-A-Z0-9+&@#\\\\/%=~_|$?!:,.])*(?:\\\\([-A-Z0-9+&@#\\\\/%=~_|$?!:,.]*\\\\)|' + '[A-Z0-9+&@#\\\\/%=~_|$])', 'i');\n    return pattern.test(str);\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}